package com.chinasofti.controller.user;

import java.util.List;

import javax.servlet.http.HttpSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import com.alibaba.fastjson.JSON;
import com.chinasofti.model.system.Role;
import com.chinasofti.model.user.User;
import com.chinasofti.service.system.RoleService;
import com.chinasofti.service.user.UserService;
import com.chinasofti.util.MessageUtil;

@Controller
@RequestMapping("/user")
public class UserController {

	@Autowired
	private UserService userService;
	
	@Autowired
	private RoleService roleService;

	@RequestMapping("/userRole.action")
	public String userRole(Model model,@ModelAttribute("user")User user) {
		List<User> userList = userService.selectList(user);
		int total = userService.selectCount(user);
		model.addAttribute("userList", userList);
		model.addAttribute("total", total);
		return "user/userRole";
	}
	
	@RequestMapping("/userRoleEdit.action")
	public String userRoleEdit(Model model,String userid) {
		User user = userService.selectByPrimaryKey(userid);
		List<Role> roleList = roleService.selectList();
		model.addAttribute("user", user);
		model.addAttribute("roleList", roleList);
		return "user/userRoleEdit";
	}

	@RequestMapping("/login.action")
	@ResponseBody
	public String login(User user, HttpSession session) {
		User u = userService.login(user);
		MessageUtil msg = new MessageUtil();
		if(u != null) {
			session.setAttribute("user", u);
			msg.setSuccess(true);
		}else {
			msg.setSuccess(false);
			msg.setMessage("账号或密码错误");
		}
		return JSON.toJSONString(msg);
	}
	
	@RequestMapping("/userRoleUpdate.action")
	@ResponseBody
	public String userRoleUpdate(User user, HttpSession session) {
		MessageUtil msg = new MessageUtil();
		try {
			userService.update(user, session);
			msg.setSuccess(true);
		}catch(Exception e) {
			msg.setSuccess(false);
			msg.setMessage(e.getMessage());
			e.printStackTrace();
		}
		return JSON.toJSONString(msg);
	}
	
	@RequestMapping("/userUpdateStatus.action")
	@ResponseBody
	public String userUpdateStatus(String ids, int status, HttpSession session) {
		MessageUtil msg = new MessageUtil();
		try {
			userService.updateStatus(ids, status, session);
			msg.setSuccess(true);
		}catch(Exception e) {
			msg.setSuccess(false);
			msg.setMessage(e.getMessage());
			e.printStackTrace();
		}
		return JSON.toJSONString(msg);
	}
	
	@RequestMapping("/userUpdatePwd.action")
	@ResponseBody
	public String userUpdatePwd(String ids, HttpSession session) {
		MessageUtil msg = new MessageUtil();
		try {
			userService.updatePwd(ids, session);
			msg.setSuccess(true);
		}catch(Exception e) {
			msg.setSuccess(false);
			msg.setMessage(e.getMessage());
			e.printStackTrace();
		}
		return JSON.toJSONString(msg);
	}


}
